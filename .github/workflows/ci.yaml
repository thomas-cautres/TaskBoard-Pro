---
name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Build once, use in multiple jobs
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max

      - name: Export Docker images
        run: |
          docker compose config --images | xargs -I {} docker save {} -o /tmp/images.tar
          gzip /tmp/images.tar

      - name: Upload Docker images
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: /tmp/images.tar.gz
          retention-days: 1

  qa:
    name: QA
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Download Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: /tmp

      - name: Load Docker images
        run: |
          gunzip /tmp/images.tar.gz
          docker load -i /tmp/images.tar

      - name: Start services
        run: docker compose up --wait --no-build

      - name: Run all QA checks in parallel
        run: |
          docker compose exec -T php sh -c '
            make phpstan & PID1=$!
            make phpcsfixer & PID2=$!
            bin/console lint:twig templates & PID3=$!
            wait $PID1 $PID2 $PID3
          '

  tests:
    name: Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Download Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: /tmp

      - name: Load Docker images
        run: |
          gunzip /tmp/images.tar.gz
          docker load -i /tmp/images.tar

      - name: Start services
        run: docker compose up --wait --no-build

      - name: Setup test environment
        run: |
          docker compose exec -T php sh -c '
            bin/console importmap:install &
            bin/console -e test doctrine:database:create &
            wait
            bin/console -e test doctrine:migrations:migrate --no-interaction
            bin/console -e test doctrine:fixtures:load --no-interaction
          '

      - name: Validate setup (non-blocking)
        run: |
          (curl -fsSL http://localhost > /dev/null && echo "✓ HTTP OK" || echo "✗ HTTP failed") &
          (curl -fsSL --insecure https://localhost > /dev/null && echo "✓ HTTPS OK" || echo "✗ HTTPS failed") &
          docker compose exec -T php bin/console -e test doctrine:schema:validate &
          wait

      - name: Run tests in parallel
        run: |
          docker compose exec -T php sh -c '
            bin/phpunit & PID1=$!
            vendor/bin/behat & PID2=$!
            wait $PID1 $PID2
          '
